{"version":3,"sources":["components/NavTab/Tab.js","components/NavTab/TabContent.js","components/Table/index.js","components/NavTab/InnerNavTab.js","components/NavTab/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Tab","active","this","props","linkClass","classNames","className","role","id","data-toggle","href","aria-controls","aria-selected","name","Component","TabContent","tabContentClass","show","aria-labelledby","children","Table","forecast","scope","map","item","key","ds","Date","toDateString","Math","round","trend","yhat_lower","yhat","yhat_upper","weekly","yearly","InnerNavTab","src","NavTabs","forecast1","forecastA","forecastB","forecastC","forecastD","Loading","class","icon","faSpinner","spin","size","App","_isMounted","predict","weekNum","setState","isLoading","bodyFormData","FormData","append","console","log","axios","method","url","data","headers","timeout","then","result","catch","error","onSearchSubmit","event","weeksToPredict","state","searchKey","view","preventDefault","onSearchChange","target","value","updateForecast","JSON","parse","fetchCache","setTimeout","type","placeholder","aria-label","disabled","NavTab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.87b06eac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\nclass Tab extends Component {\n  render() {\n    const { active } = this.props;\n\n    var linkClass = classNames(\"nav-link\", {\n      active: active,\n    });\n\n    return (\n      <li className=\"nab-item\" role=\"presentation\">\n        <a\n          className={linkClass}\n          id={this.props.id + \"-tab\"}\n          data-toggle=\"tab\"\n          href={\"#\" + this.props.id}\n          role=\"tab\"\n          aria-controls={this.props.id + \"-tab\"}\n          aria-selected=\"false\"\n        >\n          {this.props.name}\n        </a>\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\nclass TabContent extends Component {\n  render() {\n    const { active } = this.props;\n\n    var tabContentClass = classNames(\"tab-pane\", \"fade\", {\n      active: active,\n      show: active,\n    });\n\n    return (\n      <div\n        className={tabContentClass}\n        id={this.props.id}\n        role=\"tabpanel\"\n        aria-labelledby={this.props.id + \"-tab\"}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\n// TabContent.defaultProps = {\n//   acive: false,\n// };\n\nexport default TabContent;\n","import React, { Component } from \"react\";\n\nclass Table extends Component {\n  render() {\n    const { forecast } = this.props;\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Trend</th>\n            <th scope=\"col\">Lower Sales</th>\n            <th scope=\"col\">Sales</th>\n            <th scope=\"col\">Upper Sales</th>\n            <th scope=\"col\">Weekly</th>\n            <th scope=\"col\">Yearly</th>\n          </tr>\n        </thead>\n        <tbody>\n          {forecast.map((item) => (\n            <tr key={item.ds}>\n              <th scope=\"row\">{new Date(item.ds).toDateString()}</th>\n              <td>{Math.round(item.trend)}</td>\n              <td>{Math.round(item.yhat_lower)}</td>\n              <td>{Math.round(item.yhat)}</td>\n              <td>{Math.round(item.yhat_upper)}</td>\n              <td>{Math.round(item.weekly)}</td>\n              <td>{Math.round(item.yearly)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\n\nimport Tab from \"./Tab\";\nimport TabContent from \"./TabContent\";\nimport Table from \"../Table\";\n\nclass InnerNavTab extends Component {\n  render() {\n    const { forecast, name } = this.props;\n\n    return (\n      <div className=\"container pt-3\">\n        <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\n          <Tab id={name + \"dashboard\"} name=\"Dashboard\" active={true} />\n          <Tab id={name + \"salesplot\"} name=\"Sales Plot\" />\n          <Tab id={name + \"trendplot\"} name=\"Trend Plot\" />\n          <Tab id={name + \"holidayplot\"} name=\"Holiday Plot\" />\n          <Tab id={name + \"weeklyplot\"} name=\"Weekly Plot\" />\n          <Tab id={name + \"yearlyplot\"} name=\"Yearly Plot\" />\n        </ul>\n        <div className=\"tab-content\" id=\"myTabContent\">\n          <TabContent id={name + \"dashboard\"} active={true}>\n            <Table forecast={forecast} />\n          </TabContent>\n          <TabContent id={name + \"salesplot\"}>\n            <img src={\"api/plot/\" + name + \"/sales\"} />\n          </TabContent>\n          <TabContent id={name + \"trendplot\"}>\n            <img src={\"api/plot/\" + name + \"/trend\"} />\n          </TabContent>\n          <TabContent id={name + \"holidayplot\"}>\n            <img src={\"api/plot/\" + name + \"/holiday\"} />\n          </TabContent>\n          <TabContent id={name + \"weeklyplot\"}>\n            <img src={\"api/plot/\" + name + \"/weekly\"} />\n          </TabContent>\n          <TabContent id={name + \"yearlyplot\"}>\n            <img src={\"api/plot/\" + name + \"/yearly\"} />\n          </TabContent>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InnerNavTab;\n","import React, { Component } from \"react\";\n\nimport Tab from \"./Tab\";\nimport TabContent from \"./TabContent\";\nimport InnerNavTab from \"./InnerNavTab\";\n\nclass NavTabs extends Component {\n  render() {\n    const {\n      forecast1,\n      forecastA,\n      forecastB,\n      forecastC,\n      forecastD,\n    } = this.props;\n    return (\n      <div className=\"container pt-5\">\n        <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n          <Tab id=\"store1\" name=\"Store1\" />\n          <Tab id=\"storeA\" name=\"Store Type A\" />\n          <Tab id=\"storeB\" name=\"Store Type B\" />\n          <Tab id=\"storeC\" name=\"Store Type C\" />\n          <Tab id=\"storeD\" name=\"Store Type D\" />\n        </ul>\n        <div className=\"tab-content\" id=\"myTabContent\">\n          <TabContent active={true}>\n            <div className=\"pt-5\">\n              <h2 className=\"text-secondary text-center p-4\">\n                Heroku has a request timeout limit of 30 sec and the model takes\n                more than 3 mins to make a forecast, thus we made a forecast 6\n                weeks in advance and cached it. It takes maximum of 10 sec to\n                load the forecast. Select Store from navigation tabs to get forecast\n                and descriptive plots. <stron>Store1</stron> is a single randome store,\n                other options are based on store type. \n              </h2>\n            </div>\n          </TabContent>\n          <TabContent id=\"store1\">\n            <InnerNavTab forecast={forecast1} name=\"store1\" />\n          </TabContent>\n          <TabContent id=\"storeA\">\n            <InnerNavTab forecast={forecastA} name=\"storeA\" />\n          </TabContent>\n          <TabContent id=\"storeB\">\n            <InnerNavTab forecast={forecastB} name=\"storeB\" />\n          </TabContent>\n          <TabContent id=\"storeC\">\n            <InnerNavTab forecast={forecastC} name=\"storeC\" />\n          </TabContent>\n          <TabContent id=\"storeD\">\n            <InnerNavTab forecast={forecastD} name=\"storeD\" />\n          </TabContent>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NavTabs;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import \"./index.css\";\n\n// FontAwesome\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n//COMPONENTS\nimport NavTab from \"../NavTab\";\n\nconst Loading = () => (\n  <div class=\"container h-100 p-5 mt-5\">\n    <div class=\"row h-100 justify-content-center align-items-center\">\n      <label>\n        <FontAwesomeIcon icon={faSpinner} spin={true} size=\"lg\" />\n        &nbsp;Loading...\n      </label>\n    </div>\n  </div>\n);\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchKey: \"\",\n      weeksToPredict: null,\n      forecast1: [],\n      forecastA: [],\n      forecastB: [],\n      forecastC: [],\n      forecastD: [],\n      isLoading: true,\n    };\n  }\n\n  predict = (weekNum) => {\n    this.setState({ isLoading: true });\n\n    // const url = \"./predict\";\n    var bodyFormData = new FormData();\n    bodyFormData.append(\"weeks\", weekNum);\n    console.log(weekNum);\n    axios({\n      method: \"post\",\n      url: \"/predict\",\n      data: bodyFormData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n      timeout: 600000,\n    })\n      .then((result) => console.log(result.data))\n      .catch((error) => this._isMounted && this.setState({ error }));\n  };\n\n  onSearchSubmit = (event) => {\n    const { weeksToPredict } = this.state;\n    this.setState({ searchKey: weeksToPredict, view: \"loading\" });\n\n    this.predict(weeksToPredict);\n\n    event.preventDefault();\n  };\n\n  onSearchChange = (event) => {\n    this.setState({ weeksToPredict: event.target.value });\n  };\n\n  updateForecast = (data) => {\n    this.setState({\n      forecast1: JSON.parse(data[\"forecast1\"]),\n      forecastA: JSON.parse(data[\"forecastA\"]),\n      forecastB: JSON.parse(data[\"forecastB\"]),\n      forecastC: JSON.parse(data[\"forecastC\"]),\n      forecastD: JSON.parse(data[\"forecastD\"]),\n    });\n  };\n\n  fetchCache = () => {\n    axios(\"/api/cached\")\n      .then((result) => this.updateForecast(result.data))\n      .catch((error) => this._isMounted && this.setState({ error }));\n  };\n\n  componentDidMount() {\n    this.fetchCache();\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 5000);\n  }\n  render() {\n    const {\n      isLoading,\n      forecast1,\n      forecastA,\n      forecastB,\n      forecastC,\n      forecastD,\n    } = this.state;\n\n    return (\n      <div className=\"App page\">\n        {/* Navigation */}\n        <nav className=\"navbar navbar-dark bg-secondary\">\n          <a className=\"navbar-brand\">Team Sukur</a>\n          <form className=\"form-inline\">\n            <input\n              className=\"form-control mr-sm-2\"\n              type=\"search\"\n              placeholder=\"Week numbers\"\n              aria-label=\"Search\"\n            />\n            <button\n              className=\"btn btn-outline-light my-2 my-sm-0\"\n              type=\"submit\"\n              disabled\n            >\n              Predict\n            </button>\n          </form>\n        </nav>\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <NavTab\n            forecast1={forecast1}\n            forecastA={forecastA}\n            forecastB={forecastB}\n            forecastC={forecastC}\n            forecastD={forecastD}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}